[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "EasyTakeout"
version = "1.0.0"
description = "Google Takeout Metadata Merger - Easily merge your Google Photos metadata with your media files"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "EasyTakeout Team", email = "team@easytakeout.com"}
]
maintainers = [
    {name = "EasyTakeout Team", email = "team@easytakeout.com"}
]
keywords = ["google", "takeout", "photos", "metadata", "exif", "merge"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics",
    "Topic :: System :: Archiving",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "PySide6>=6.4.0",
    "Pillow>=8.0.0",
    "exifread>=2.3.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-qt>=4.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "pre-commit>=2.15"
]
build = [
    "pyinstaller>=5.0",
    "setuptools>=45"
]

[project.urls]
Homepage = "https://github.com/yourusername/EasyTakeout"
Documentation = "https://github.com/yourusername/EasyTakeout/blob/main/docs/USER_GUIDE.md"
Repository = "https://github.com/yourusername/EasyTakeout.git"
"Bug Tracker" = "https://github.com/yourusername/EasyTakeout/issues"
Changelog = "https://github.com/yourusername/EasyTakeout/blob/main/CHANGELOG.md"

[project.scripts]
easytakeout = "cli.merge_takeout:main"

[tool.setuptools.packages.find]
include = ["app*", "cli*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "cli"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
qt_api = "pyside6"

[tool.coverage.run]
source = ["app", "cli"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
