# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Operating System Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*.tmp
*.temp

# Windows
*.msi
*.msm
*.msp

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.sublime-project
.sublime-workspace

# Project specific ignores
# Build artifacts
build-output/
release/
packaging/dist/
packaging/build/

# Logs
logs/
*.log
app.log
debug.log
error.log

# Test data and temporary files
test_data/
temp/
tmp/
*.backup
*.bak

# Application data
config/user_settings.json
cache/
user_data/

# Performance profiling
*.prof
*.profile

# Security and secrets
.env.local
.env.production
secrets.json
api_keys.txt
*.key
*.pem
*.crt
*.p12

# Large test files (you might want to use Git LFS for these)
*.zip
*.tar.gz
*.7z
*.rar
test_takeout_large/
sample_data/

# Documentation build
docs/build/
docs/_build/
site/

# Coverage reports
htmlcov/
.coverage

# Packaging
*.dmg
*.pkg
*.deb
*.rpm

# PyInstaller builds
*.exe
!packaging/dist/*.exe  # Allow final builds in packaging

# Virtual environments
venv*/
.conda/

# MacOS
.AppleDouble
.LSOverride

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Local configuration override
local_config.py
local_settings.py

# Testing artifacts
.pytest_cache/
.coverage
coverage.xml
*.cover

# Application specific
user_preferences.json
recent_files.json
app_state.json
